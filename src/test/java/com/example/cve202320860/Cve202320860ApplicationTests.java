package com.example.cve202320860;

import org.assertj.core.api.Assertions;
import org.junit.jupiter.api.Test;
import org.springframework.boot.SpringBootVersion;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.boot.test.context.SpringBootTest.WebEnvironment;
import org.springframework.boot.test.web.server.LocalServerPort;
import org.springframework.http.HttpStatusCode;
import org.springframework.http.ResponseEntity;
import org.springframework.web.client.HttpClientErrorException;
import org.springframework.web.client.RestTemplate;

import static org.assertj.core.api.Assertions.assertThat;

@SpringBootTest(webEnvironment = WebEnvironment.RANDOM_PORT)
class Cve202320860ApplicationTests {
    @LocalServerPort
    Integer port;

    /**
     * <p><pre>gradle -q test -Dbootversion=3.0.4</pre>
     * <p><pre>gradle -q test -Dbootversion=3.0.5</pre>
     */
    @Test
    void reproduce() {
        RestTemplate restTemplate = new RestTemplate();
        String url = String.format("http://localhost:%s/foo", port);
        String version = SpringBootVersion.getVersion();
        System.out.println("SpringBootVersion.getVersion()=" + version);
        if ("3.0.4".equals(version)) {
            ResponseEntity<String> entity = restTemplate.getForEntity(url, String.class);
            assertThat(entity.getStatusCode()).isEqualTo(HttpStatusCode.valueOf(200));
            assertThat(entity.getBody()).isEqualTo("securitydata");
        }
        else if ("3.0.5".equals(version)) {
            Assertions.assertThatThrownBy(() -> restTemplate.getForEntity(url, String.class))
                    .isInstanceOf(HttpClientErrorException.Unauthorized.class);
        }
        else {
            throw new RuntimeException("unsupported bootversion");
        }
    }
}
